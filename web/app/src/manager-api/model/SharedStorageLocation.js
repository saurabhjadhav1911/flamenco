/**
 * Flamenco manager
 * Render Farm manager API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ManagerVariableAudience from './ManagerVariableAudience';

/**
 * The SharedStorageLocation model module.
 * @module model/SharedStorageLocation
 * @version 0.0.0
 */
class SharedStorageLocation {
    /**
     * Constructs a new <code>SharedStorageLocation</code>.
     * Location of the shared storage, adjusted for a specific audience &amp; platform. This uses two-way variables to adjust the shared storage path from the Manager&#39;s configuration. 
     * @alias module:model/SharedStorageLocation
     * @param location {String} 
     * @param audience {module:model/ManagerVariableAudience} 
     * @param platform {String} 
     * @param shamanEnabled {Boolean} Whether the Shaman file transfer API is available.
     */
    constructor(location, audience, platform, shamanEnabled) { 
        
        SharedStorageLocation.initialize(this, location, audience, platform, shamanEnabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, location, audience, platform, shamanEnabled) { 
        obj['location'] = location;
        obj['audience'] = audience;
        obj['platform'] = platform;
        obj['shamanEnabled'] = shamanEnabled;
    }

    /**
     * Constructs a <code>SharedStorageLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SharedStorageLocation} obj Optional instance to populate.
     * @return {module:model/SharedStorageLocation} The populated <code>SharedStorageLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SharedStorageLocation();

            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('audience')) {
                obj['audience'] = ManagerVariableAudience.constructFromObject(data['audience']);
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
            }
            if (data.hasOwnProperty('shamanEnabled')) {
                obj['shamanEnabled'] = ApiClient.convertToType(data['shamanEnabled'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} location
 */
SharedStorageLocation.prototype['location'] = undefined;

/**
 * @member {module:model/ManagerVariableAudience} audience
 */
SharedStorageLocation.prototype['audience'] = undefined;

/**
 * @member {String} platform
 */
SharedStorageLocation.prototype['platform'] = undefined;

/**
 * Whether the Shaman file transfer API is available.
 * @member {Boolean} shamanEnabled
 */
SharedStorageLocation.prototype['shamanEnabled'] = undefined;






export default SharedStorageLocation;

