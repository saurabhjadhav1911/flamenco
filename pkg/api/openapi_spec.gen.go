// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
