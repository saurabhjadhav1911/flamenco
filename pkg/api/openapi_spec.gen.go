// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+R923IcN5bgryBqNkJ2bF0oUrIs9suqZcumW7K4ItXeiKaDRGWiqiBmAdkAkqVqBSPm",
	"I/ZPdidiH3ae9gc8f7SBcwAkMhNZVZREiq3pBzdVmYnLwcG5Xz4MMrkspWDC6MHhh4HOFmxJ4c9nWvO5",
	"YPkp1Zf23znTmeKl4VIMDhtPCdeEEmP/oppwY/+tWMb4FcvJdE3MgpHfpLpkajwYDkolS6YMZzBLJpdL",
	"KnL4mxu2hD/+i2KzweHgXyb14iZuZZPn+MHgejgw65INDgdUKbq2/34np/Zr97M2iou5+/28VFwqbtbR",
	"C1wYNmfKv4G/Jj4XdJl+sHlMbaiptm7Hwu8E37Q7ovqyfyFVxXP7YCbVkprBIf4wbL94PRwo9veKK5YP",
	"Dv/mX7LAcXsJa4u20IJSBJJ4VcP6vH4P88rpO5YZu8BnV5QXdFqwX+T0hBljl9PBnBMu5gUjGp8TOSOU",
	"/CKnxI6mEwiykDzDP5vj/LZggsz5FRNDUvAlN4BnV7Tguf1vxTQx0v6mGXGDjMlrUaxJpe0ayYqbBUGg",
	"weR27oCCHeC3kS1nM1oVpruu0wUj7iGug+iFXAm3GFJppsjKrj1nhqklFzD/gmsPkjEOH42ZniL8MjFS",
	"FoaXbiIu6oksPqoZzRgMynJu7NZxRLf+GS00G3aBaxZM2UXTopArYj9tL5TQmbHvLBh5J6dkQTWZMiaI",
	"rqZLbgzLx+Q3WRU54cuyWJOcFQw/KwrC3nONA1J9qclMKhz6nZwOCRW5JSByWfLCvsPN+EzUiD6VsmBU",
	"wI6uaNGFz/HaLKQg7H2pmNZcAvCnjNi3K2pYbmEkVY4b9OfAYCfNowvrCmcz7KLGJVt313CUM2H4jDPl",
	"BgkoPyTLShu7nkrwv1eIiO7Q3rmLkJzHXgyq5om78EysCXtvFCVUzaulpTAe36blemw/1OMTuWTHeLfW",
	"33xLMnsMlWa5fTNTjBqGW3X3bx2tob7iNWW5AQrx5ZLlnBpWrIlidihCYas5m3HB7QdDSwhgejvlEGAi",
	"K+NWRJXhWVVQFc6hBx90NfXkcxPVTRCqE/dluOo3HuHUfX7FNXeX7IYj/NV+yQtLgNtU3OKYW9mOlPek",
	"BkWLAFfTkX2CEEec82AlzyulmDDFmkhLKqkfF5A4IpZ6TC5+fnby848/nL84evnj+fGz058vUBDIuWKZ",
	"kWpNSmoW5L+Si7PB5F/gf2eDC0LLkomc5XiETFRLu78ZL9i5fX8wHORc+T/hZ8e0FlQvWH5ev/l74o70",
	"nUuXhjoIRLuPLiZyCKrJ0Q/+ysC2LeH4c2HXr8bkV0kE05acaKOqzFSKafINcAg9JDnP7FRUcaa/JVQx",
	"oquylMq0t+4WP7TCw8G+3XQhqRkMAa933WSEOvHNDMg4THFPI4FlNCkcuXDfXBwSWqzoWsNLY3IBdB3o",
	"6cUhogd87UjX2yPk5QBQxwEU+abgl4xQDzRC83wkxbdjcrFi09QwKzatuRZg3ZIKOmeWqA3JtDJESIMM",
	"1M2CbAnweEwuFjzPmV2gYFdMwdB/auOyI412pchk7IsAHBBg7eyCFk1a40+rBijONACi4+AyGA5WbLr1",
	"zNIY6YWgGk9QeOaavAIQKOSM3ABFpEvLtxISEzM0IXb9TPUivvHAZchRhwRo4rhVQaesINmCijkb4jLs",
	"yGTFC//zmJzan7lGPiJFffiB7TKhK2U5C0UBLQgHzUnt/ahKYMfUsAZ5r2EIS7qZjO4n2Fm/SMmwHfGv",
	"RZwdgcLlRXMO8Sy2EWyLDgmm/pJr4ykUkNx+xOgigRffP27jpw1O2LPreorUBt2FP6Zm8XzBsss3TDtx",
	"uSXf00onLsMP9b8sDFaLtRcFzMIi3DdCmm8dnU4KS1yUVY90Do8QI1dUow5hMW/GRY6zeBKfHFif47RJ",
	"lQRFngULC3WsRCpLt8ZJoQWYWXKlMEhY6ExWIk+uSctKZVsljuhITvCD9pEi0NyKwrDxnofuwLYc+Qsu",
	"8vrEd8K/HoRJqF7dfViqFwsSVGuZcWqQJNvdnDNxdUXVwCFGvwDh7Qud83APiGJWqwARmxKNyqzTioHe",
	"vWdZZdg2u0e/USFQ9uixh3Ga7kSfpI7lR6Wk6u7nJyaY4hlh9jFRTJdSaJay0OQJVP/59PSYoBmB2DeC",
	"+B4GIkeWlWZFlaO+hZdiXUiaEy0RqwMAcbUN2FolEZbGBRo8uBTjM/HcTvZ47yBwHRAFQHOjhk6pZvbJ",
	"tNJry50YgYX6RTnmJYWhXBBKHrxhRq1Hz6we+wBfXTAKeqFdHhc5z6hh2mm6qwXPFsTwJaqK9iiYNiSj",
	"wgqNihnFrdL7QlqV2YslbkCuQXCxaEKtcOx5+QPt+J59Nys4Ewa4oCRaLplVDOdEMaqlADoC4hR7j5eH",
	"04JMaXYpZzPkmMEy5EXJrllqybSm8xTutZALzr1+P4VZLwq6ZCKTf2VKO0PFjlh+VX+xeRX+RcfiU6v4",
	"Bc1+tChezwaHf9tMZU68+GG/uh62F0wzw6+CEL2BIaGEpA3xX1jpx1swkjQaVewUYbEPQFriS6YNXZbx",
	"SVpxaGSfJHlRYri3b49+8Cv8BYx+W+yFu5oqrUAULJVVmad3c+o3YdcAEMJXxztuqs2R7II96OppIxNm",
	"OLLfr39HbPhzIbPLgmvTL1OtgCxrR4UUg7sJli6Wk4wpoA9g0UbJS1pqoUuW8RnP/BHvxNbi9fwojFqn",
	"OFr3pc5V2mwaxv2c72QfDm/33M7WCdRDx5bgnov4kmrzBrgzy4+WdM6OxEx2j+FHIav5IqbsoOnRiACW",
	"nGVWU5ujSJXz2Ywp+wyXCfYt+zWhZCG1GSlWUMOvGHn75qUnpxb9Rsoth3C7njE5lZYBoMaOiuubl0P7",
	"k6X0ghpGzgYfLB+5nnyQIlhJdDWb8fdMX58NkNY2j8d+0IS9KpJXzQ3TEIu2GJtbBwJTRSP1HMUrZqhl",
	"iUDW8hysbLQ4biJVe+KWWVFNuVFUrcnSDeahPyavpAK5pyzY+9j+4ZjhUuasQEWlsjyeXNDxdJxd2ItW",
	"H7gF7CUDSyN7T+1YDvFhH4eDk1Jxw8gLxecLK5dWmqkxW1Je2FWvp4qJ/zZ1srpUc/8GIvbgBF4gJ+b/",
	"/d8rVkRwbcDpJNIQ03AyqmI93wbC6cVPoEYoJovMQgB9JmXBjPvboR6XYjSjHN8If5RWuLZ//L1iFfxB",
	"VbbgV9GfaCvC4UdOBIHH8HfF8HllYTKKZ0tKu2EPz0Gh75IdFD3S2gk+i2zkThxE28BnYTQt1A9E3y2r",
	"B/VPqb7UJ9VySdU65YBalgWfcZaTwrEDdEJ489WYPEcJEaVQeFibnuxPlnDZ1xm18iDVl12xGb7aWfkB",
	"N6Bb8A56d++l1/+9Yrjn6D6Bd2xw+NgKczVN6Ltl18MBuEbOp2twH7Y57u/+r3MuGhgfUNZh8+/XbZi4",
	"hXwYLLngS3thHqZF1E+mXC94YQX2aU25hp4OvTz6y481GUo6OeRspllzoXuphdZw+nADz6HekeD07Si2",
	"m91kV9Gpta/EG2YqJdBMatELfaPU32juRFvYwk0kn8iz3cbofuztsxQB3u96oVC8/8iL5Kxqz6WY8Xml",
	"qEkqN1y/4EqbN5XYZAlC+6glxBzFEMvzZvbDWpF08xFVCV3bVINfErgoJTO2IjOaGan0kDizupBiBK5U",
	"Kxll8XrJjKPZyUuzwdQ6tSyCsGVp1lajLWANYISvilw8MGTKet1rC7qk4kdQRfPN9q8TeBVXYRQVesYU",
	"eXZ8BD4ib2pM28O0kYrO2UuZ0bT/+4fgYQILgGVA9lLAXO7j8VbNoj1Le3fD+IA3YMlfqeLeHNhGkHOz",
	"kiua4EGvBRut6JpcuY/RAG7htpTagD3J6pmCoZkAvEeWbVmmWxY0A3cImSm5JBcfrLhzfeGEXq7QdT10",
	"1ooF+Ns0mkko8fE6wehJvYmKnK5kYk200NJPmnf8LhQd9qsFc8svC2qsDDwKyhI60sEy5AaZrsOi+xAN",
	"PtqumzgDWA1o/+UO5/WsyjkTTeOhUwudHKmTIlNrGL2JS22iUG306fCwV7QsLYzhlP2hELtl8Kmb4Knn",
	"GDeT2PD6L4yVbyohkpE4R8G8tYouLsKALOmaXDJWWqIkvC0rLeosO/N0D7SWI3uEQhRA3wR5dsNqvekw",
	"FjdJkISDYrFyeH1kHG2z1AKeXOAjy53YBbFbcQaYOBgEr4+dBOA9l/a/gr03zmuGRPrC8uqLIbloAuGC",
	"vHp7cmoVoQsIjuhB9BY6twAZoNYHoxSWB/v5kXeANA/LOxs2X6yWeTwx/J37c76Y2yWz22X5do7ivCa7",
	"OUvesLll24rlSH+7kKR5rpjWN4xJdPQ3fdPkzKyoYhuu4Taq9Vu4OSjXBZfkebAN6ZuJw58U1egYgAdV",
	"HNnoATEcZBjTAiscRFDoWX3qtE5YVilu1sGX0qKAuxrVN1nTT5ipymdac22oMCh8ptxQsZAnp1a2s0TP",
	"MgmQu+woJAzTpdbOXvIj+KnoDoFK/Y65LyWodbeQhCeIc7BkmXIFnzDQ/e1inMKD4tPJz8/2H3+H115X",
	"yyHR/B8Q+DNdG6ZRIMuZtssjhVuUd3BlbrY6CKpl24LZwEuB5GdQh8CN5xKF0MHh4ODxdO/R04fZ/pPp",
	"3sHBQf5wNn30eJbtPfn+KX24n9G976YP8+8e7eX7j797+uT7ven3e09y9njvUf5kb/8p27MD8X+wweHD",
	"R/uPwM2BsxVyPudiHk/13cH0yX723cH06aP9R7P84cH06cGTvdn0u729757ufb+XHdCHj588fJLNDmj+",
	"6NH+dwePpw+/f5J9R79/+njvydN6qv0n112d30PkOElt7a+R9OgVIcev46hEPw7wc5Amnb3X2XqdvhEO",
	"AGg41UEpwviUaJIxORJEFjlTxDmZtLf1urFgXssB3lUaTcVnYTvk6IezARqFvHbsRiE8eAQprgJ0tQtn",
	"bxnpoppPdMYEG1nqNcEg0NHRDxc9US8OZXZUfHHtL3jBTkqWbdWBcfBh85i236aa+6fMgvYZWtNap5IK",
	"7/4I9HD+oDZigOLsQF/7C8yCCrLyzDyIiUOLHPGg4Bp20UrUh+bW15icRtLFpyNf6qjbDtjdjiQcdZfA",
	"ORWMeqmLIuV1tMotOqLDaUmx5UGT9XhoyqhH9CtOmn4XNLHCJqmNx0yOAXTmQ9cyxpo0OuH4bvOUBfV0",
	"a9gv7DYB/Bs3i9rgvxOovRKeATmb9oB+6MTUIclZyUQOaRECNDwUZ77ys9lV9oyOo8c90DnV2Gq96Xg7",
	"fpxKXAq5EuByLiTNUR+zB9bQu+r942BvcDUQge/0tI8WPEDQaMCuV5a4JaHhTgSEO2Bv/YffPC8MEkpz",
	"NTwtELMpUdFnnqUM46N0tgnZvO5MXVm54wUMFUIPANEsJ3Gv2d/Yexc4FeT6OEDrrnCgvpjhPtwOWsQT",
	"hev2mXElIt+fijWYwtYkHK0r7s7/pjz3cxHCDURPZpfMHL3+RU7fgmsvmSCimQmZeUOirRwlr5gi/mtv",
	"ToYQerBK6TF5YdkYW4EHaWgFXnbFZaXPcTUXKGFNa+ROxVF8pogmbx9pDvQrXcZZL+kcq8aib+TjivNB",
	"QwbG46TnULGZYnpxHrzEG22dUWig04zc9+ifxt080Oiprh1IcGyYQaG1C8PS3lgP/wRHEM0WEOl4xfOK",
	"orubrGCWORNMof1TkiUVaz+Iy6crFc0Mz2jR6y+6ORD7s19vGnH2CQFniTAzl/8aZcg2z3DTXYujovou",
	"nTtyqeojT4QvhTBbe/GsPuNWmk4A2DEczCyq5VRAUM3Wg0oHeKVSA+qAMfwrTLIJUpb09Oe9njAB3qNA",
	"hfBSaKtqXUx09O0FYVeg/EEyoZEuichz5+hN+9AC02H2mDz3Y2Lu05yZ+Dmq/OBisPfE3wf/70LONbpT",
	"BWMuHrwseMZNsfbTThmSSnDo2UfrYdiI1V4xJcq/a8eQAlN0vjES1tOYeuZR5p2cfgsyo33dvvJA2/UQ",
	"cJZY3E/RW1luZTaJo3ntXSa7pkumBvFJJt4A3E/0MQrayCZUJqQS9Q9WUBpvZw0tRJXlpqzKzVuPtIWw",
	"DIi8qv+VVBT6QJHwa1BDLrk90dmNYBCC0YriFzmFINmi+C34Nh3ro/qykHN8GF/rjas+pfrypZz3UbFT",
	"dwlItqjEpZMcwMsc7qyScklyhgwux4cuC8AuCW4rvZI8tx/nuOkm90nhsd1J11ZuFxGQyC1tTF7RdcgB",
	"WFaF4SUE1guGBkD23iQ9UJ6WbUTVU/Qx3AwLayppt7EJE+3wu4htpwDJfrkNgNER3Fyk28dJbnHo/I0D",
	"1XcD2/AmXG27COj8QZ8qAzZLeHzMN3cp2gTW7FxnGyPqN2AikpNdcBHf3ISNLuTA42MCuaB2BMvPadLm",
	"jOIu8k1m6owgN66Vk9wA48+WWuG8tjvgrD23c81YQqCxZNeHgXEdr9e+73PIoiTP3da+HfVXfvWfivwd",
	"f/AnfHWehSDkXT9uRETc5lW6QcrSltvlx0lerjg7KZkgXrsLo0xqI4lPxWqZh3YJ+P30sHr34OCP/0n+",
	"41//+Lc//v2P//3Hv/3Hv/7xf/749z/+V6w0gTYcx7+6Wc6zZT44HHxw/7wGh1QlLs/RQnRg92SssnlO",
	"q5xLHyE74wVzjs0J6kkTPZu8k1ONDraH+wdjGDI+5ONff7L/LPXgcP/RcDBTdGlpzODh6OHeYDgANUuf",
	"S3V+xXMmrdoOvwyGA1mZsjJYgIK9N0wgPgzGpQvWga24t7rrwpnCyiZpcLlKGZ3xlJRm43iu/AnWXTiv",
	"40AGBRfV+wijIY5w5EDt9MtBx9QWY84WnTBkmuxaLGuLcSRGkG12A/9qz+Y7cZcovYs50Wtt2LLO7nHf",
	"tkoaGAmFiOaCa0ZMO0DSvexsMuDwLeSKqVFGNQv+YDeFX5SL3T3DczkbDMnZYMVFLlca/5FTteIC/5Yl",
	"E1Od238wk43JSZhKLktqeKhj9ZN8oMmFqgQoej+9fn1y8SeiKkEuIHBNFiTn2kDCA0SKWjWShvyHUmqo",
	"ahEWaZnwM+1z3mhB7I6GjX2QswEq1eps4L2urhwXOr280Aj1NEpl2a9V1M8GEU97oMN4Z4Ma9kuprcIM",
	"evslI4ZpM8nZtJq7Mh2aMKo5FMRw6rZdQKWZCwvkGcllBoWQIHWvKBo7S0r3fXYn+8P57jU1hiSTJY8t",
	"9xftygpjO9pFqLPUrcpx6v7lIYg1k1hOuLP+zDgrcpJLpsUDQ5bUZOB4IDQzFS3CSJ2Ih1Os7wS2Ed0u",
	"1gF4JIs8Si5oFvhq10oJBb+8EepMHDUWaIWyJfKoYe2EhPzsdUm19orETkG+XQNc4sKnmGq6gOGpVwmx",
	"ZCEE0WtvpvcxAT6lfEj4mI3JlM2kYnUsbhSLPb6ZPvQ5yx7eRmIxpvCcT9fnPiT6JplMTjZOrHVH3e0G",
	"ah5I10ZW2WKr1IfahlgHOdv+Xx4St31w881k7C9fFfK2MrF9nvBNTnzX7O22FpoqSBmXnQyXaUsFSmee",
	"Smcd218JnWJZOQZmKlBQI+vTJ9nR0yEQltCAF79lhxo23PpdTInMTVtnrlSRnvjtm5eEGl+4IpqdcKNZ",
	"MQvhUnIlCknzXcKca2tVOEVMdob9953KzVNlQ1JsSCzUcmZG7VzZlLWynvA+5bXGt/ojElvjHNGublhp",
	"Q1g3rb5Gd6xmIBvF1mq3IYiC4x537M62tvtEDD/WQLYjRfIz9Z3UJgs5PgsuWsjuQwpqDwhHRrUEMe+s",
	"2tvb/w6dS0Cx4MSgdgyWG4K6fc+slBtOD8JIZIlZSX8i0pkKWi/wuZCK5eQbkG+kT+u68PTWmX6FNIQp",
	"6tJnQsmTtgRrl/XtNttwNxGu4MLVCXVubwjXfKBJFopRYhabXZoPskFyTV5fMbVS3DCUa7msNFgBRVSZ",
	"xdcsSIoPKb/BSzl3/oBAA9A14QVyX8PSLhpOBSZkVBW8p2qYaZDAG1CJJHLVKSMtjxEikWIQ+5ox0I9A",
	"keUCU/9wnERE4aZsk0+jAhsumZ80dYnqPe5W2ceZBUMSfScbszyP9tiSDI6Je9Yx727MsNnNuNA/1qdn",
	"zxin3GyHDKhBO1G8CFKNPJq6FlM6b+b6904BEVcrocmNPLGrT/nlLsV6ujh7U92kjSKbo8D86P3IiTlc",
	"ffnhH5mjxTKFtQc+O7a0ZQ6cqXHEySk21N5yEOVz8Vq0qk44o/Cz4yMoRR4lXp0HU/pAr+h8ztSo4n2T",
	"H/7NG4mtSDhblmzu6gKP6sKwg+FgyXWWKDnRXxi0s5jbh7i/aGkgd1a0AeAFY+WJVXmrVEIkPCbaPXel",
	"lZyW47O9TwxVBsJFmMjRBxXYL7BXjt4iCA/L6bqpRoSxuUY+y8bkWVkWnDk/HPrgpP2Qg1nlIqdrfS5n",
	"5yvGLi8g5B3eaf5uX4bKBOMzkVghiCyC7D8aLWSlyM8/H756VRe9wDq9NQbGIw8OB0tJTEXMgswUxEjk",
	"5yAUHg4efn+4t4eJm04ncf4FbVfg39p7at/qIFhzkm5eAM3YSLOSKox2WMlRwaAysq9j5aBu2YYdCwge",
	"Y5c9YCbfnA2WEo3DpvJ24W/H5Eeo57BkVGhyNmBXTK3teL5aVQdR6/1HnB0A2pN960HzIR3nFwC1fbg2",
	"DwpjD5vQbIwbrXjDvTDUsD6VzzkZVZxivruTMqmwRYPttKi8RSND1DNd0UvWRa6P8abuHgrc+C6OZrJQ",
	"x4QHXNdwQLUlKfYQIAF2ODBMu1fkbGZl5aQe3u+qTZSgwWKaSKxqbcil99fJMPbHCxeYklBY9XlB/7He",
	"nCTerBzg3DeoYsS9CoBI1SZwlAdqtcRpYZrMuOB60TJm3zgKdpdTHIb9bTjPPhPBn6nm2QZx7KO1/y8X",
	"4PC5ktg/W/hBJEw0AfHX2hnoXfUIEofpXPtCGx9npdguM3g3yG7aVLMg2YePNYqm44ITmsIpumKwqVSj",
	"Lg0Mol3+vZV5lrHwf06rVCbcW80UVErhOo4EOvphSEqq9Uqq3D9CMdgVxLFCjteha9neIiYABi62vUb1",
	"ThfGlIPra6g4jkZnCC3MTCQDhxM/ZXTpzKX4pT6cTGY+dIPLSbcKDEZlkhdULV0QM5RRGgwHBc+YS1dy",
	"8/x0/PLqoDP+arUaz0U1lmo+cd/oybwsRgfjvTET44VZYnFEborGat10EXYdDh6O98YgBcmSCVryweHg",
	"AH7ChDs4mQkt+eTqYJK162fNUbEJBVeOcqhDbZqFtizKYK4TjLa/t+ehaiV9i8FW0MRMx8k7Z8VFvN2x",
	"5k5zPji8JtCFxeoi5FwhCnq6aleM3sxmKYZZpyS/oXONVR8MBd2kHuNHkZeSu/yMueun1BkwHEUY9HqY",
	"Bu8EXKsTryr1AfsFF/mfQ/WEY0yRvDVwpwvCJ+D9QlaiLqYAMnAowd/stfVZ1oVVPBLrOAklt1eWwa+U",
	"hHZcjZN7wV2IvVRkKRUjz18e+QLwaDCEOARNVhQiGECa8ttJIUUpdeKkINM+cVTAav4s8/Vng0arYlAC",
	"LL70vVTO3gzeb6ySI9Gpj0lNt49HjQok3ZX+2ry4Q1wkhh3Akc64YPcPp/5KCw5Gfxpj08cgUwtPnefg",
	"qh7fN+KpD3IrUdELqlg+ckmLoFj1o+wJvHyC735RrD2+M/z8T4GYsOAIIxErGmV8+pHxBuP0IiNUHthV",
	"iniBZQo+6chvUA36etgYa02XRXOstly8DUHaB/EGmktcsbTg0ZUTNp7GsyxjOnQITJUNTQwZgvOENAQ3",
	"9gD8Sq9LJp4dH/nMuKKQK5SsL3wnrYmTJN2BXpCSZpf2sM9E/3FrZqpyRH0hq36yc0KvWLJ21u0QnuRU",
	"SaYZg9XSbnqF6N1CykeJUP0WMkBE4IpNaVl6c0VuVaRZVRR1LrDvlmjlyvtHSt7Wbu06+LNx5L7xJzI5",
	"DpWV7A7XZFYJbKZXQGH5LehtESKF2b0l0npxMET6Tj5QVy70evLB+0uuN1Gjuj5os6fP3z4MuAWZK0/i",
	"NDc/+iDWl50R+iaaTae46bVV3hMTRj6f/gnbROv321fNarDdnEZ6vawuYNvWychbXbekbrYk3BLqjbgZ",
	"Sos2mhRiu55UVCiZUl3XfpoqudKNmGdnMbyhmtjcI6B1m1q3r1YDx30h7R5yClG1WGfhVuhnowNP95Ch",
	"DaJ0Efkd9LxNMW7DgsBiWVm2iQTJhUJb/ufiVqLqCRqg/ejh/u0TXssX0HIVYr6hSWMume835WPDmy8k",
	"I8O5htyEYk3yirV6UmU0W0SdNnEouA9SkkJim8y75DnwgPiCmk1KgDhGqC9HAgtt35GoW1vMULAqfGO4",
	"X5qB8sxdys6lmjQqNvQbYZjJFj8VckobedcQtHq76N1XvWEHSjtMSyqnvhiFT0ZYWOZLxTrZfKeHYEPL",
	"ngU1WCFJ9xW/0FuO6TUUQ8XmHHXc4xwA3bOc1vn93XfPSJNGaE/gMupvgzTWDTxSMla7xBx646FdAyb0",
	"jO+aWjb6NfRjEUA1Un1dzDF2IIAUJD6zxAroCxAs1yYBPhzfG6oC9zbkTFnA74aQdUeNGTTxgML5Iida",
	"qtDvv4GGlrZOPtj//kqXbKOY6Zu17iJk+gHvjczXbTnbIw7gszbpcBEtgRulmyNvOJ8oIaDZ3c314E+d",
	"i97hNPTgDoGWlJTDS3X34AQAi06HYWhiCjVydgZiPVVgsGG8Lgg/oAvwejNzROlzO0aHBIR+fN7moPz9",
	"ywiU3JdNapOXFvfy3SQ3Cyf4kcijXum9kJ9Mm+0RC4Zh6s1jeMOW8oo1mine5YHcCm+tt5KSpKvSalPf",
	"rFy1itD88VtX7EwBRKK8zgDHHY06PsKFZhkrISWSCaM40ygzQSalm+Rued5bwd6XmGAK4T1d26NdVFit",
	"q4FpL3kEggSObrzfXwavbu+ib0QuEHQ3IJiVfefSIDyjlES4/fcJFZBGgXze10nV7wHQJJfg1042VG10",
	"y93AX9BYHVAtLoHXz19uooq1FSPUw74GpPwn1/eaR/0Rul9y0JDTsxmBNDN1NFmPqQwkvpOQKfbPzR4b",
	"CZM9tqZm5CSYTGEtu6iej3rL5LrhVlQH5ogmtP39vgxN3+ypuSDnnQJ3dzDW+nBNHWryBsHqy5PWDSgd",
	"5IXWJv2+gt1vAxKH+rIbqR/0S/1KSF6j92sPK0YYc6bjxEXdYSz3jOtSt25ItwyNaf0WImzYhZ2md+yR",
	"CDshTnzPgAmm8G8ghM1WO7fkOGhOkjKRxYX1feQHcX1H7s4ylmyVkvIQ+3Yh0GXM9TSJvAxIA/ee3j4C",
	"hpXQQjGar105FEeEH92JH0MxsrL/wdMDW7uYg8eOXOgWROvq+1DMCHusEAAlGEWlcLaHO7vCVesKt27w",
	"c+xkROuGMuhQ1OtlwcWlq/CPCOoggJ4lg75/B5RKY//pWmHEcvkYMu2Ky7sqNRktCnTYcB25LGrigEBt",
	"+87dgijR8WWCxTQaXFHF6EaaEfdI2JVyxCd7q1Qk1adjV4LyBWhJsk1Far2h7CZU6pIgIsUHMYzTzew7",
	"rq8DbvF+XRlog1L3kIph4JrrYLhIKZXR7uLjSVk11G1sK8I/w3gl6v2cgW20BwxNi73vFNt54CpqsoO9",
	"eg0vinoJ3VsCw04++FYv15MP8Av/xwZrf9z1QSr23OFiS2jbuYkP9PHuSnj+1Rs5CYbdHvt1wRvf/yLU",
	"uknM6ne/y6x1T6ffb/3idTp97Kg736tLFOe81R1Jkr1pGvEo0X3ZRLwDRv7nRsZhSlF1RIU3+3m4DoE5",
	"mzFFQsMbXzmvcPF+Z4P9ve/PBgGx6lIskGENJmlTKeHbctfb00GOw2iV0GGoc+AYtAk9vrG1t1wyKRhh",
	"hYZx6gosqWUCtgAAF4xiQLoD4f8Y4TSj51SMfrD7HL2FAQYJGEbtkFMwlIrPuaAFzGnHhwbMWOKlkHFJ",
	"mNCJiZuo+qTrpMRjqg1VW0J3NioI5fAGFJmEDpk77O21W9johVvYYKsjdRd5RmaGmZE2itFlk0IE1XrK",
	"hb3fw+1hxc9xDt1q3/YRthovhnbNNPt732973aFjAxEdycFYqSfJEZT73KoDGMk0ZWbFHLI7cEauSu+/",
	"9IUwZ6H9nFQduhNEZ4/LoOw8TtRRbLTe2XJr/Q2sb45DvFLJzBWYmTL7YZh/um7cO5QoLnqv0CGBnuMu",
	"i1YYP4E3xd1xHNYWDgScwUVi9fMd8quE2GDX+abxEO7nTKqMT4s1yQrpylD9fHp6TDIpBIPYYF/eUUKa",
	"tyO8LjVbN86LEfaeZoZoumROkjTSl0UluayskIcf6PGZ8KeKMZV4m+qSv4kTIFOZr3tZaRwRbaeotYsu",
	"WGLJESw2kw+u+t4WB7rrp7BDTEgo5nc/LXqualHSGI3592Im76m1rllWcoNNLvHFhpOfuJplm0/fV8H8",
	"WpDA72cTLkBdS48PPT74tsQEHy6oJgJKuZE1M/cLnWKnWaeEKIaRLRlmouLetzgVXB5Ry1MWuuNsQTzj",
	"2oRtRb5T++L9QT7D3ptJWVAubpiXddoGzteCV5Ern2pDZmwV9UBaxB3EdqJe8SdhPF9HcSNW7eZojcoi",
	"3ilWfX4LZKc47Vfva0UW+BU4W7HmKMRALOkazfBsNmOZ8WIt1NTHEagmK1YU7n1vgYf2Boy6lJ5FtaRC",
	"Y9geCKfglrvitJtmNHYFUTTYdaEKkr9RGIMDF6u+VxeEC20YzVtZllGJmt7ctVDo8dZYuo8V9VN9dBGO",
	"EHTaaLdR53xtzq96HvVdrLSrUhRMwMYlxaA2WawJradLSOh4DKPl3EyiypT9nLLuyHdrYI7KayYg/BdQ",
	"x/1a++ODowKcHpb1XtOBOP5Tj7MNzT9VzaQLvMkHV+LHaTt9oao/wO+hyOp23hCG/cwyx/ZE3qGvLhRa",
	"Z7i+ZPcx3rMmeytXM/IIqJdimVwuQ/1jMEZm2IiY65Cq2+nC5spAunJxF0Al0ZTXfAl9J64Y1pBoI0vC",
	"rSavtBmTZ2KNohW+FleMiju+hcYpWDu+qYy3cHfbBf2iOPW5SUEKH3wJsh1D0lehWtxWYmCJSM4MVOwP",
	"R+wVtN1u/i7ioWPe3cpsd310n19Y3FBt7j5IjfdEoOtFwN3EOo/RN0DKgrFypKMKvNuoSLNk79dEUpo7",
	"26X2DVj/GzWKNwUcs5hpCpn68n6iYa8uew8w4tYo1TZksOcp2Kpzih/tkwo1koNMpY1U/yT0yTJIqeKW",
	"H6HKbALNW/oelqhkalT3aerjj/hikGdu7/wbJfH7ZQ3gS7ioOw2n8pBgeb841NE7748zzS/f+dPqLr4N",
	"POvwwPpIrEpWf6kTSGXl6ZGczTYY4/hcvJ7NBrtc0PsHS1dIFkhso4Ts36AqbQ22V1RdxjoF1cSXut4C",
	"8Oe0KNCt67VfI0nh7BW++IRViKF15QPFyBzSpNzw495TEVsORdzq1XZT9F/q0DL2Lm90t/D7P8WV3hkN",
	"n1VmwYTBxgyunKPFBu9z7tPGPhknMWLDSJgBPU2N5lS8PvAkxhqXMZAUjKNTG3xp5ICVesWgLujfJ5AK",
	"Sfq/uN9YdXMM8aGwoXa+wvAyse4BQi8qjLK6A0KahCW6Jdy2Th0mSmktgU3iVj9OQv0npjyOqrtz8/Y6",
	"cGZkoeG1JjSzZKNgOdYdwAhTR1FGTeeRRxdorMBFHdnoqAxTo0JmtAACRwv9uanaFWvsptIpbPUdtXr4",
	"rJPHXYDN7VX5cIbN3vgX180xFLDqI1e/SudUquPXQwLsb7Xd49HewWeskIko1ouYx0z5Wlo/MMGRdLpE",
	"p7RpEn2NjuW5TjiAUUOipX9Mi0Ku0BbswOK2rvh8YYiQK+fpPLhbBuMvEhUQvIsOEiuFw+owBBdSe6BV",
	"ewhhwwt3w0vr3C80jB9BY9ttApzyCqdKlzlLuhr7r0vUCfMr8Nq7nfRdRycbRR1WPt6q4cbquulTt6QO",
	"htPNHhoOk3zJCS1d4GsYG67NFzHofiJziqrJYmtOsy55Bk7auJFoqeRcMa2HxHUWhjKzUpEZ5UWl2FYO",
	"4/mKZiJvOEIsuP3olpBZ0Wj7TZks6XrER6rq97+/omtnSqnEVxG994qu/8JY+ca1t/m61DOMkHFiTJ3m",
	"EUnMkWszYlCqEmRCLhkrvaszbmrr2vZCoVFhCbomlKArM5ZJ66bUCf9mDyJ3JHpQ9qKVtdYUGuNvRW1Z",
	"mbIyo1LJvMo2CfqWWL6Gl4/9u/eCOUB9kMm7ks1vmnYxdN+WYv6lMjb2d8zYAOnP5SL44oOPHj68/Yv2",
	"kom5WYQs5z/FxWVznmNZeUtlKXEgGLlPMAHHrfTg9ld6TNcQmA+VbalyhUIfPXx8F26E0ByUvGI5p+R0",
	"XTqPGaAYQYzywuQ05JXUda3j6JpH+0/vpgixT3RDTgmkQ0IHqTWZ2YvtCmi7vAmzUNKYAtr6sWL2TyV5",
	"YEKLBfRSakMUyzDNJ5QZgv2iPBCltXAATlX6SJXaEcKErhQLwWYgvbtTNtgHPedzprHpTuuMyfOQZgRx",
	"OMe//gRw/uX4x5+IQyU7aFlQIdJxMJsEHrOollNBeaEn0F2drTxZ4gqLK3lqT5D6ezEIIKquPDXHhmST",
	"QWSE6rTgbgaZdIo1e0wJ7ACi+boZg7/IqTeTgoz294opbtGvLuA8bJVKHDfq2+jEoM+Oj5olpGMTmVwu",
	"K+H61nOzSDbjaDhwExM4bHgV1kSgo0ZvvXksqWu3Ye+KkoVfUWcycDomcmIxzyjMAnyiTpJyEISiJPbf",
	"7+Q0lH6I53B5Tde/X///AAAA//8EFYW6StoAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
