// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"0g/xHC6v6fq36/8XAAD//40ZVqbg2gAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
