// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/w0AAP//yB9oGqUMAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
